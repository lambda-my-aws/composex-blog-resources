---
Description: >-
  Pipeline to release Lambda layers publicly when new release is created

Metadata:
  Author: https://github.com/johnpreston

Parameters:
  ArtifactsBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cicd/shared/s3/artifacts/name

  CfnTemplatesBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cicd/shared/s3/templates/name

  DevAccountCfnRoleArn:
    Type: String

  DevAccountPipelineRoleArn:
    Type: String

  ProdAccountCfnRoleArn:
    Type: String

  ProdAccountPipelineRoleArn:
    Type: String

  ComposeRepositoryName:
    Type: String
    Description: Name of VCS repo for the Docker composeX file

  BranchName:
    Type: String
    Default: master

  KmsKeyArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cicd/shared/kms/arn

Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codebuild.${AWS::URLSuffix}'
      Policies:
        - PolicyName: EcsComposeXAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: Ec2BasicReads
                Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeRegion*
              - Action:
                  - s3:PutObject
                  - s3:PutObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}/*'
              - Sid: EcsComposeXOtherS3Access
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${CfnTemplatesBucketName}'
                NotAction:
                  - s3:DeleteBucket
                Effect: Allow
              - Sid: CloudFormationActions
                Effect: Allow
                Resource: '*'
                Action:
                  - cloudformation:Describe*
                  - cloudformation:Get*
                  - cloudformation:Validate*
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - codebuild:Get*
                  - codebuild:BatchGet*
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: CodeBuildSelfAccessForAutomationTricks0
        - PolicyName: KmsAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: DecryptEncryptArtifacts
                Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                  - kms:ReEncrypt*
                  - kms:Decrypt
                Resource:
                  - !Ref KmsKeyArn

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'codepipeline.${AWS::URLSuffix}'
            Condition:
              Bool:
                aws:SecureTransport: true
      Policies:
        - PolicyName: CrossAccountAssume
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Ref ProdAccountPipelineRoleArn
                  - !Ref DevAccountPipelineRoleArn
                Condition:
                  Bool:
                    aws:SecureTransport: true
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:PutObject
                  - s3:PutObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${ArtifactsBucketName}/*'
        - PolicyName: CodecommitAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowReadAndGet
                Effect: Allow
                Resource:
                  - !Sub 'arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${ComposeRepositoryName}'
                Action:
                  - codecommit:Get*
                  - codecommit:Describe*
                  - codecommit:GitPull
                  - codecommit:UploadArchive
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:Get*
                  - codebuild:Describe*
                Effect: Allow
                Resource: '*'
          PolicyName: CodeBuildAccess
        - PolicyName: KmsAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: DecryptEncryptArtifacts
                Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                  - kms:ReEncrypt*
                  - kms:Decrypt
                Resource:
                  - !Ref KmsKeyArn
        - PolicyName: SNSPublish
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref ApprovalTopic

  ApprovalTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub '${AWS::StackName}Approval'

  EcsComposeXGenerate:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt 'CodeBuildRole.Arn'
      Description: !Sub 'Generates CFN template from ${ComposeRepositoryName}'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CFN_TPL_BUCKET
            Type: PLAINTEXT
            Value: !Ref CfnTemplatesBucketName
      Source:
        Type: CODEPIPELINE
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactsBucketName
        EncryptionKey:
          Id: !Ref KmsKeyArn
          Type: KMS
        Type: S3
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt 'CodePipelineRole.Arn'
      Stages:
        - Name: PipelineSource
          Actions:
            - Name: DockerComposeSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: !Ref BranchName
                PollForSourceChanges: false
                RepositoryName: !Ref ComposeRepositoryName
              OutputArtifacts:
                - Name: DockerComposeSource
              RunOrder: '1'
        - Name: !Sub 'GenerateCfnTemplates'
          Actions:
            - Name: EcsComposeXGenerate
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref EcsComposeXGenerate
              InputArtifacts:
                - Name: DockerComposeSource
              OutputArtifacts:
                - Name: ComposeXOutput
              RunOrder: '1'
        - Name: !Sub 'DeployToDev'
          Actions:
            - Name: DeployToDev
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Ref DevAccountCfnRoleArn
                StackName: !Sub 'dev'
                TemplatePath: !Sub 'ComposeXOutput::composex_dev.yml'
#                TemplateConfiguration: !Sub 'ComposeXOutput::composex_root.params.json'
                Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
              InputArtifacts:
                - Name: ComposeXOutput
              OutputArtifacts:
                - Name: DevStackOutputs
              RunOrder: '1'
              RoleArn: !Ref DevAccountPipelineRoleArn
        - Name: !Sub 'DestroyDev'
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !Ref DevAccountCfnRoleArn
                StackName: !Sub 'dev'
              Name: DeployToDev
              RunOrder: '1'
              RoleArn: !Ref DevAccountPipelineRoleArn
        - Name: !Sub 'ApproveToProd'
          Actions:
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref 'ApprovalTopic'
              Name: RequestApproval
        - Name: !Sub 'DeployToProd'
          Actions:
            - Name: DeployToProd
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Ref ProdAccountCfnRoleArn
                StackName: !Sub 'production'
                TemplatePath: !Sub 'ComposeXOutput::composex_prod.yml'
                TemplateConfiguration: !Sub 'DockerComposeSource::prod-configuration.json'
                Capabilities: 'CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM'
              InputArtifacts:
                - Name: ComposeXOutput
                - Name: DockerComposeSource
              OutputArtifacts:
                - Name: ProdStackOutput
              RunOrder: '1'
              RoleArn: !Ref ProdAccountPipelineRoleArn
